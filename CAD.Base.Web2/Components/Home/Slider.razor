@inject IJSRuntime jSRuntime

<div id="bootstrapCarousel" class="carousel slide" data-ride="carousel">
  <div class="carousel-inner">
      @for (var i = 0; i < Images.Length; i++)
     {
         <div class="carousel-item @IsFirstElement(i)">
            <img class="d-block w-100" src="@Images[i]" alt="@Images[i]">
        </div>
     }
  </div>
  <a class="carousel-control-prev" id="bootstrapCarousel-prev" role="button" data-slide="prev">
    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
    <span class="sr-only">Previous</span>
  </a>
  <a class="carousel-control-next" id="bootstrapCarousel-next" role="button" data-slide="next">
    <span class="carousel-control-next-icon" aria-hidden="true"></span>
    <span class="sr-only">Next</span>
  </a>
</div>

@code {
    [Parameter]
    public string[] Images { get; set; }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        jSRuntime.InvokeAsync<object>("initializeCarousel");   
    }

    private string IsFirstElement(int id) => (id == 0) ? "active" : "";
}
